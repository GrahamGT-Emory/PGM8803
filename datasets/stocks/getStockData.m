% daily closing prices p_t on day t
% June 3, 1997 -- June 30, 1999
% only consider dates where all exchanges traded (should be 17 x 542)
% consider log returns: rt = 100*log(p_t / p_{t-1})

%% define indices to retrieve
indices = struct( ...
  'ticker', { ...
    'INDEXEURO:AEX', ...
    'INDEXASX:XAO', ...
    'INDEXVIE:ATX', ...
    'INDEXEURO:BEL20', ...
    'INDEXEURO:PX1', ...
    'INDEXBIT:FTSEMIB', ... % first date: june 12 2009
    'INDEXFTSE:UKX', ...
    'INDEXDB:DAX', ...
    'INDEXTSI:OSPTX', ...
    'INDEXHANGSENG:HSI', ...
    'INDEXBME:IB', ...
    'INDEXNIKKEI:NI225', ...
    'INDEXNASDAQ:OMXH25', ...
    'INDEXEURO:PSI20', ...
    'INDEXSP:.INX', ...
    'INDEXSWX:SMI'}, ...
  'name', { ...
    'Amsterdam Exchange Index', ...
    'All Ordinary Composite', ...
    'Austrian Traded Index', ...
    'BEL 20', ...
    'CAC 40', ...
    'FTSEMIB', ...
    'FTSE 100', ...
    'DAX 30', ...
    'Toronto Stock Exchange 300', ...
    'Hang Seng Composite', ...
    'IBEX 35', ...
    'Nikkei 225', ...
    'OMX Helsinki 25', ...
    'Portugal Stock Index', ...
    'S&P 500', ...
    'Swiss Market Index'}, ...
  'country', { ...
    'Netherlands', ...
    'Australia', ...
    'Austria', ...
    'Belgium', ...
    'France', ...
    'Italy', ...
    'United Kingdom', ...
    'Germany', ...
    'Canada', ...
    'Hong Kong', ...
    'Spain', ...
    'Japan', ...
    'Finland', ...
    'Portugal', ...
    'United States', ...
    'Switzerland'}, ...
  'countryAbbrev', { ...
    'NL', ...
    'AU', ...
    'AT', ...
    'BE', ...
    'FR', ...
    'IT', ...
    'UK', ...
    'DE', ...
    'CA', ...
    'HK', ...
    'ES', ...
    'JP', ...
    'FI', ...
    'PT', ...
    'US', ...
    'CH'});

%% download data from google finance
addpath('./dailyDataSuite/');
data = getGoogleDailyData( ...
  {indices.ticker}, ...
   '03/06/2010', '30/06/2013', 'dd/mm/yyyy');
 
%% remove non-trading days
fields = fieldnames(data);
dates = cell(1,length(data));
validdates = data.(fields{1}).Date;
for i = 2:length(fields)
  validdates = intersect(validdates,data.(fields{i}).Date);
end
for i = 1:length(fields)
  dates = data.(fields{i}).Date;
  [~,ivaliddates,~] = intersect(dates,validdates);
  adjcloses = data.(fields{i}).AdjClose;
  opens = data.(fields{i}).Open;
  indices(i).opens = opens(ivaliddates);
  indices(i).closes = adjcloses(ivaliddates);
  indices(i).logreturns = 100*log(indices(i).closes./indices(i).opens);
end

%% put in single matrix
X = zeros(length(indices),length(validdates));
for i = 1:length(indices)
  X(i,:) = indices(i).logreturns;
end

